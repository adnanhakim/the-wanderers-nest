/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniproject;

/**
 *
 * @author ACE03
 */
public class Terms extends javax.swing.JFrame {

    /**
     * Creates new form Terms
     */
    public Terms() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        closebutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Terms & Conditions", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria Math", 0, 14), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel2.setToolTipText("");
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 51));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(0, 238, 128));

        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(255, 255, 51));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("By proceeding with the reservation you accept and agree with The Wanderer’s Nest Pvt Ltd (the Hotel) that the reservation (details of which are set out above), if accepted by us, shall be on the terms and conditions as follows:\n\nELIGIBLE AGE FOR CHECK-IN\n• You must be at least 18 years of age to check-in and register for a room.\n\nCHECK-IN AND CHECK-OUT TIME  \n• Check-in time is from 3:00pm and check-out time is by 11:00am.\n• A valid government-issued identification or passport is required at check-in.\n\nEARLY ARRIVAL AND LATE DEPARTURE\n• Should you arrive at the hotel prior to the normal check-in time, you are advised to approach the Hotel's Guest Services Desk for assistance in storing your luggage until check-in is available. If arriving early, you are also advised to consider making a reservation for the evening prior to your arrival.\n• Late check-outs are available on request subject to room availability and occupancy level.\n• Please check with the Hotel's Front Desk at least 24 hours prior to your departure on availability of late check-out. A half-day room charge may be incurred for late check-out between 12pm to 6pm and a full day room charge may be incurred for late check-out after 6pm.\n\nCREDIT CARD CONFIRMATION\n• A valid credit card is required for all reservations to secure your reservation.\n• Upon reservation, credit card will be charged for the amount indicated on the booking confirmation page and email.\n• The Hotel accepts Visa, Mastercard, American Express, and JCB credit cards. Debit Cards are not accepted. China Union Pay is also accepted.\n• With effect from 15 January 2015, Diners Club credit cards will no longer be accepted for Hotel and other ancillary services as a mode of payment.\n• Exchange rates are applicable at time of reservation, but are subject to currency fluctuations and billing will be at the prevailing exchange rate upon completion of your stay.\n\nCANCELLATION POLICY\n• Reservations made over 11-16 Sep 2018, 28-31 Dec 2018, 1-4 Jan 2019, 8-10 Aug 2019 and 28 Dec 2019 - 4 Jan 2020 require full pre-payment and are non-cancellable, non-amendable and non-refundable. The entire period of your stay, inclusive of nights before and after the dates listed above, will be charged to your credit card upon reservation.\n• Cancellation of and/or amendments to your reservation must be made 48 hours (i.e., by 4pm Singapore time) prior to your arrival date.\n• Cancellation or amendment made within 48 hours of arrival will incur a cancellation fee of one night's room charge (inclusive of any applicable prevailing government tax).\n• In the event of no-show, a fee of one night's room charge (inclusive of any applicable prevailing government tax) will be charged to your credit card provided at the time of reservation.\n\nGROUP RESERVATIONS\n• For reservations for groups of 10 rooms and above, please email the Hotel at groups@marinabaysands.com.\n\nSANDS REWARDS\n• Membership card must be presented personally at the point of purchase or redemption.\n• There is no refund or retroactive credit for all Sands Rewards transactions.\n• Patrons must be at least 21 years of age to join.\n• Sands Rewards outlets are subject to change without prior notice.\n• Earning of rewards is only available for selected shows at Sands Theatre and is unavailable at ArtScience Museum, Sampan Rides, Digital Light Canvas, SkyPark Observation Deck and Sands Expo and Convention Centre.\n• Other Terms and Conditions apply. \n\nCHILD BREAKFAST CHARGE\n• All rooms and suite rates do not include child breakfast charge. Child breakfast charge is applicable for any child between 6-12 years old. Breakfast for children 5 years and under is free. Child breakfast is chargeable to guest account at walk-in price upon consumption.\n\nFURTHER INFORMATION\n• In proceeding with the reservation, you further agree to allow Marina Bay Sands and its agents to collect, use and disclose to any of its related corporations (as defined in the Companies Act (Cap. 50), its agents and its third party service providers (including those outside of Singapore) your personal data for the purposes of (i) administering, managing and maintaining your customer relationship with us; (ii) MBS and its affiliates complying with any applicable law, governmental or regulatory requirements, or request or direction of any governmental authority of any relevant jurisdiction; and (iii) other business related purposes of MBS and its affiliates.\n• You may unsubscribe to any such email at any time upon receipt of the said email.\n• No gatherings and parties of any nature are allowed. The hotel reserves the right to evict any additional occupants in the room.\n• No prepared food from sources other than the Hotel's in-room dining services is permitted in the guest rooms.\n• This reservation is not transferable. No name change is allowed.\n\nGENERAL PROVISIONS\n• By proceeding with the reservation, you further agree and acknowledge that if the reservation is accepted by the Hotel, your stay subsequently shall be subject to the Hotel's standard terms and conditions of stay.\n• The Hotel may, at its absolute discretion, cancel the reservation if the Hotel is of the opinion that the reservation information provided is falsified or incomplete.\n• The Hotel shall be entitled to vary, amend and/or otherwise change these terms and conditions at any time without prior notice.\n• You shall indemnify and hold the Hotel harmless in respect of any liability, loss, damage, cost and expense of any nature arising out of, and/or in connection with the acceptance of the reservation by the Hotel.\n• The Hotel shall not be liable for any losses, damages, costs or expenses incurred by you as a result of any cancellation of the reservation by the Hotel.\n• The reservation and the terms and conditions set out hereto shall be governed in accordance with the law of the Republic of Singapore.\n• The Contracts (Rights of Third Parties) Act ((Cap. 53B) shall apply.\n\n");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextArea1.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 530, 280));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 550, 310));

        closebutton.setFont(new java.awt.Font("HelveticaNeue", 0, 14)); // NOI18N
        closebutton.setText("Close");
        closebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebuttonActionPerformed(evt);
            }
        });
        getContentPane().add(closebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 390, 90, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Riyaz\\Desktop\\MINI\\Term450.jpg")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebuttonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closebuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Terms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Terms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Terms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Terms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Terms().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closebutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
